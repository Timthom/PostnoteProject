{"version":3,"file":"creator.component.js","sourceRoot":"","sources":["creator.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, Inject, Pipe, EventEmitter, Input, Output, ViewChild, ViewChildren, QueryList} from '@angular/core';\nimport {RouteConfig, ROUTER_DIRECTIVES, ROUTER_PROVIDERS} from '@angular/router-deprecated';\nimport {DataService} from './data.service';\nimport {OnInit} from '@angular/core';\nimport {Note} from './note';\nimport {NoteComponent} from './note.component';\nimport {Postnote2App} from './postNote2.component';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Reverse} from './reverse.pipe';\nimport {SortNotes} from './sort-notes.pipe';\nimport {DropdownComponent} from './dropdown.component';\nimport { AngularFire, defaultFirebase, FirebaseRef, FirebaseListObservable } from 'angularfire2';\nimport { Dragula } from 'ng2-dragula/ng2-dragula';\nimport {LocalStorageService} from './localstorage.service';\nimport {FirstLetter} from './first-letter.pipe';\nimport { ToastsManager } from 'ng2-toastr/ng2-toastr';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { DragulaHelperService } from './dragula-helper.service';\n\n@Component({\n    moduleId: module.id,\n    selector: 'creator',\n    templateUrl: 'creator.component.html',\n    styleUrls: ['creator.component.css'],\n    directives: [ROUTER_DIRECTIVES, NoteComponent, DropdownComponent, Dragula],\n    pipes: [Reverse, FirstLetter, SortNotes],\n    providers: [LocalStorageService, Cookie]\n})\n@RouteConfig([\n])\nexport class CreatorComponent {\n    @ViewChildren(NoteComponent)\n    private noteComponents: QueryList<NoteComponent>;\n\n    groups: any;\n\n    notes: any;\n\n    @Output()\n    notesChanged = new EventEmitter();\n\n\n    title: string = \"\";\n    text: string = \"\";\n\n\n    selectedGroup: string = \"noGroup\";\n    _authData;\n    categoriesVisible: boolean = false;\n    colorCount: number = 0;\n\n    constructor(private _ds: DataService, @Inject(FirebaseRef) private _ref: Firebase, private _ls: LocalStorageService, public toastr: ToastsManager, private _dragulaHelper: DragulaHelperService) {\n        this._authData = this._ref.getAuth();\n    }\n\n    ngOnInit() {\n        this.getNotes();\n        this.getGroups();\n\n        if(this.visits()){\n                let time = new Date().getTime();\n                let newNote = new Note(\"Welcome!!\", \"This is your first time here at PostNote, you can choose to log in or create your own account or you can just start using the app right now only on this device by using the addbutton in the bottom corner to add new notes like this one, or add a new category in the menu to the left!\\nHave fun!\" , \"noGroup\", time.toString(), this.randomColor());\n                this._ls.addNoteToNotes(newNote);\n                this.notesChanged.emit('');\n        }\n    }\n\n    getGroups() {\n        const token = localStorage.getItem('token');\n        if (this._authData != null && token != null) {\n            this._ds.getAllGroups().then(groups => this.groups = groups);\n        } else {\n            this.groups = this._ls.getAllGroups();\n\n        }\n    }\n\n\n    getNotes() {\n        const token = localStorage.getItem('token');\n        if (this._authData != null && token != null) {\n            this._ds.getAllNotesInGroup('noGroup').then(notes => this.notes = notes);\n          \n        } else {\n            this.notes = this._ls.getNotesInGroup('noGroup');\n        }\n    }\n\n    //Emitted from dropdown?\n    groupChanged(event) {\n        //Causes a bug where the creators dropdown changes when you change a notes group?\n        this.selectedGroup = event;\n    }\n\n    save(group: any) {\n        let time = new Date().getTime();\n        let self = this;\n\n        if (this._authData != null) {\n            console.log(`inne i save med group = ${group}`);\n            this._ds.addNoteToNotes(\"\", \"\", group, time, this.randomColor(), -1);\n            this._dragulaHelper.updatePositionsInGroup(group);\n\n        } else {\n            let newNote = new Note(\"new note\", \"\", group, time.toString(), this.randomColor());\n            this._ls.addNoteToNotes(newNote);\n            this.notesChanged.emit('');\n\n        }\n\n        // this.getNotes(); //Update view // dont need it since calles fix...\n        this.categoriesVisible = false;\n\n        if (group == \"noGroup\") {\n            this.toastr.success('A new note was created');\n        } else {\n            this.toastr.success('A new note was created in ' + group);\n        }\n    }\n\n    open() {\n        this.categoriesVisible = !this.categoriesVisible;\n    }\n\n    randomColor() {\n        var colors = [\"blue\", \"magenta\", \"yellow\", \"green\", \"pink\", \"orange\"];\n        // if we want to pick a random color.......\n        //var color = colors[Math.floor(Math.random()*colors.length)];\n        var color = colors[this.colorCount];\n        this.colorCount++;\n        if (this.colorCount === 6) {\n            this.colorCount = 0;\n        }\n        return color;\n    }\n\n    hideCategoryButtons() {\n        this.categoriesVisible = false;\n    }\n\n\n    noteChanged() {\n        this.notesChanged.emit('');\n        this.getNotes();\n    }\n\n    groupsChanged() {\n        this.noteComponents.toArray().forEach((child) => child.groupsChanged());\n        this.getGroups();\n\n    }    \n\n    visits() {\n        var count = Cookie.get('count');\n        if(count == null) {\n            Cookie.set('count','1');\n            return true;\n        }else {\n            var newcount = +count + 1;\n            Cookie.delete('count');\n            Cookie.set('count', 'newcount', 1000000);\n            return false;\n        }\n    }\n}"]}