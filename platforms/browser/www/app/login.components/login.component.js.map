{"version":3,"file":"login.component.js","sourceRoot":"","sources":["login.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAsD,eAAe,CAAC,CAAA;AACtE,uBAAoD,iBAAiB,CAAC,CAAA;AACtE,sCAAmC,0BAA0B,CAAC,CAAA;AAC9D,kCAA0D,4BAA4B,CAAC,CAAA;AAYvF;IAOI,wBAAoB,GAAgB,EAAU,YAAkC,EAAU,OAAe;QAArF,QAAG,GAAH,GAAG,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAsB;QAAU,YAAO,GAAP,OAAO,CAAQ;QAN/F,0BAAqB,GAAG,IAAI,mBAAY,EAAE,CAAC;QAGrD,UAAK,GAAG,KAAK,CAAC;QACd,iBAAY,GAAG,EAAE,CAAC;IAE0F,CAAC;IAE7G,mCAAU,GAAV;QACI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC/C;;YAEI;IACR,CAAC;IAED,iCAAQ,GAAR;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACzB,KAAK,EAAE,CAAC,EAAE,EAAE,mBAAU,CAAC,QAAQ,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,mBAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;IACP,CAAC;IAED,0CAAiB,GAAjB;QACG,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC;IACzC,CAAC;IAED,wCAAe,GAAf;QACI,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC;IAED,yCAAgB,GAAhB;QACI,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;IACzC,CAAC;IAED,wCAAe,GAAf;QACI,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC;IAED,4CAAmB,GAAnB;QACI,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAChD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,CAAC;IAzCD;QAAC,aAAM,EAAE;;iEAAA;IAXb;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,YAAY;YACtB,WAAW,EAAE,sBAAsB;YACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;YAClC,UAAU,EAAE,CAAC,qCAAiB,CAAC;YAC/B,KAAK,EAAE,EAAE;YACT,SAAS,EAAE,EAAE;SACd,CAAC;;sBAAA;IA6CF,qBAAC;AAAD,CAAC,AA3CD,IA2CC;AA3CY,sBAAc,iBA2C1B,CAAA","sourcesContent":["import {Component, OnInit, EventEmitter, Output} from \"@angular/core\";\nimport {FormBuilder, ControlGroup, Validators} from \"@angular/common\";\nimport {AuthorizationService} from \"../authorization.service\";\nimport {ROUTER_DIRECTIVES, ROUTER_PROVIDERS, Router} from '@angular/router-deprecated';\n\n@Component({\n  moduleId: module.id,\n  selector: 'login-user',\n  templateUrl: 'login.component.html',\n  styleUrls: ['login.component.css'],\n  directives: [ROUTER_DIRECTIVES],\n  pipes: [],\n  providers: []\n})\n\nexport class LoginComponent implements OnInit {\n    @Output() emitCreateUserAccount = new EventEmitter();\n    \n    myForm: ControlGroup;\n    error = false;\n    errorMessage = '';\n\n    constructor(private _fb: FormBuilder, private _authService: AuthorizationService, private _router: Router) {}\n\n    onLoggedIn() {\n        this._authService.loginUser(this.myForm.value);\n        /* if(this._authService.loginSuccess()) {\n            this._router.parent.navigate(['PostnoteAppRoute']);\n        } */\n    }\n\n    ngOnInit():any {\n        this.myForm = this._fb.group({\n            email: ['', Validators.required],\n            password: ['', Validators.required],\n        });\n    }\n    \n    loginWithFacebook() {\n       this._authService.loginFacebookAuth();\n    }\n    \n    loginWithGoogle() {\n        this._authService.loginGoogleAuth();\n    }\n    \n    loginWithTwitter() {\n        this._authService.loginTwitterAuth();\n    }  \n    \n    loginWithGitHub() {\n        this._authService.loginGitHubAuth();\n    }\n    \n    createAccountWindow() {\n        console.log(\"Create account click is working!\");\n        this.emitCreateUserAccount.emit('');\n    }\n}"]}