{"version":3,"file":"create-user-account.component.js","sourceRoot":"","sources":["create-user-account.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit, EventEmitter, Output} from \"@angular/core\";\nimport {FormBuilder, ControlGroup, Validators, Control} from \"@angular/common\";\nimport {RouteConfig, ROUTER_DIRECTIVES, ROUTER_PROVIDERS} from '@angular/router-deprecated';\nimport {AuthorizationService} from \"../authorization.service\";\n\n@Component({\n  moduleId: module.id,\n  selector: 'create-user-account',\n  templateUrl: 'create-user-account.component.html',\n  styleUrls: ['create-user-account.component.css'],\n  directives: [],\n  pipes: [],\n  providers: []\n})\n\nexport class CreateUserAccountComponent implements OnInit {\n    @Output() emitLoginUserAccountWindow = new EventEmitter();\n    \n    myForm:ControlGroup;\n    error = false;\n    errorMessage = '';\n\n    constructor(private _fb:FormBuilder, private _authService: AuthorizationService) {}\n\n    onCreateAccount() {\n        console.log(this.myForm.value.email);\n        /* Password matching expression. Password must be at least 8 characters, no more than 20 characters, \n        and must include at least one upper case letter, one lower case letter, and one numeric digit. */\n        // var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,20}$/;\n        \n        var re = /[0-9]/;\n        var re_2 = /[A-Z]/;\n        var re_3 = /[a-z]/;\n        var re_4 = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        \n        if(this.myForm.value.password != this.myForm.value.confirmPassword) {\n            alert('Error: passwords do not match!');\n        } else if(!re.test(this.myForm.value.password)) {\n            alert('Error: password must contain at least one number!');\n        } else if(!re_2.test(this.myForm.value.password)) {\n            alert('Error: password must contain at least one uppercase letter!');\n        } else if(!re_3.test(this.myForm.value.password)) {\n            alert('Error: password must contain at least one lowercase letter!');\n        } else if(this.myForm.value.password.length < 8) {\n            alert('Error: password must contain at least 8 characters!');\n        } else if(this.myForm.value.password.length > 20) {\n            alert('Error: password must be less than 20 charachters!');\n        } else if(!re_4.test(this.myForm.value.email)) {\n            alert('Error: You must enter a valid email address as username!');\n        } else {\n            this._authService.createUserAccount(this.myForm.value);\n            this.switchBackToLoginComponent();\n        }\n    }\n    \n    ngOnInit():any {\n        this.myForm = this._fb.group({\n            email: ['', Validators.required],\n            password: ['', Validators.required],\n            confirmPassword:['', Validators.required],\n        });\n    }\n    \n    switchBackToLoginComponent() {\n        this.emitLoginUserAccountWindow.emit('');\n        console.log(\"GoBack button is working!!!\");\n    }\n}"]}