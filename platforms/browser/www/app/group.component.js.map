{"version":3,"file":"group.component.js","sourceRoot":"","sources":["group.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, Input, Output, EventEmitter} from '@angular/core';\nimport {RouteConfig, ROUTER_DIRECTIVES, ROUTER_PROVIDERS} from '@angular/router-deprecated';\nimport {NoteComponent} from './note.component';\nimport {DataService} from './data.service';\nimport { AngularFire, defaultFirebase, FirebaseRef, FirebaseListObservable } from 'angularfire2';\nimport { Injectable, Inject } from '@angular/core';\nimport {Reverse} from './reverse.pipe';\nimport {SortNotes} from './sort-notes.pipe';\nimport {ValueService} from './value.service';\nimport { Dragula } from 'ng2-dragula/ng2-dragula';\nimport {LocalStorageService} from './localstorage.service';\nimport { ToastsManager } from 'ng2-toastr/ng2-toastr';\n\n@Component({\n  moduleId: module.id,\n  selector: 'group',\n  providers: [ROUTER_PROVIDERS, LocalStorageService, ToastsManager],\n  templateUrl: 'group.component.html',\n  styleUrls: ['group.component.css'],\n  directives: [ROUTER_DIRECTIVES, NoteComponent, Dragula],\n  pipes: [Reverse, SortNotes]\n})\n@RouteConfig([\n])\n\nexport class GroupComponent {\n  @Input()\n  groups: any;\n  \n  @Input()\n  group;\n\n  @Input()\n  groupName;\n\n  @Input()\n  note;\n\n  @Output() clickedDelete = new EventEmitter();\n  @Output() notesChanged = new EventEmitter();\n  \n  @Input()\n  notes: any;\n\n  newName: string = \"\";\n  contentList: string[];\n  arrowSrc: string = 'icon_expand.png';\n  expanded: boolean = this._tx._toggleExpand;\n  editingName: boolean = false;\n  enableEditIfNull: string = '';\n  editSrc: string = 'icon_edit.png';\n  _authData;\n  groupId;\n\n  constructor( @Inject(FirebaseRef) \n  private _ref: Firebase, \n  private _ds: DataService,\n  private _tx: ValueService, \n  private _ls: LocalStorageService, \n  public toastr: ToastsManager) {\n    this._authData = this._ref.getAuth();\n  }\n\n  ngOnInit() {\n    this.getNotes();\n  }\n\n  saveId(){\n    this._tx._focusedId = this.group.$key;\n    console.log(this._tx._focusedId);\n  }\n\n  getNotes() {\n    if (this._authData != null) {\n      this._ds.getAllNotesInGroup(this.groupName).then(notes => this.notes = notes);\n    } else {\n      this.notes = this._ls.getNotesInGroup(this.groupName);\n    }\n  }\n\n  getContent() {\n    if (this._authData != null) {\n      let doneInLoopArray;\n      let arrayOfKeys: any[] = [];\n\n      this.notes.forEach(function (result) {\n        doneInLoopArray = result;\n      });\n\n      doneInLoopArray.forEach(function (note) {\n        arrayOfKeys.push(note.$key);\n      });\n\n      return arrayOfKeys;\n    }\n  }\n\n  deleteGroup() {\n     //remove from shared model\n     console.log('DELETE GROUP IN GROUP !!!');\n     console.log(this.groupId);\n    for (var item in this.groups) {\n            if (this.group.$key == this.groups[item].$key) {\n                this.groups.splice(item, 1);\n                break;\n            }\n    }\n    if (this._authData != null) {\n      //To be able to iterate through all notes\n      let content = this.getContent();\n      //Remove all notes in group\n      for (let key of content) {\n        this._ds.deleteNote(key);\n      }\n      this._ds.deleteGroup(this._tx._focusedId);\n      this.clickedDelete.emit('');\n      this._tx._toggleExpand = false;\n    } else {//if not logged in\n      //Removes notes of the group\n      for (let note of this.notes) {\n        this._ls.deleteNote(note.$key);\n      }\n\n      this._ls.deleteGroup(this._tx._focusedId);\n      //TEMPORARY\n      //location.reload();\n    }\n    console.log(this.groupId);\n    this.clickedDelete.emit('');\n    this.toastr.success('hallelujah!', 'group deleted!');\n  }\n  \n  \n  editGroupName() {\n    //change name in shared model\n    for (var index in this.groups) {\n            if (this.group.$key == this.groups[index].$key) {\n                this.groups[index].name = this.groupName;\n                break;\n            }\n    }\n    if (this._authData != null) {\n      this._ds.updateGroupName(this.group.$key, this.groupName);\n    } else {\n      this._ls.updateGroupName(this.group.$key, this.groupName);\n      //TEMPORARY\n      //location.reload();\n    }\n    this.clickedDelete.emit(''); //Also works for edits!\n    this.toastr.success('hallelujah!', 'group updated!');\n  }\n\n  // Enable inputfield to edit text in field when user click on pen icon else disable inputfield\n  editClick() {\n    this.editingName = !this.editingName;\n\n    if (this.editingName) {\n      this.enableEditIfNull = null;\n      this.editSrc = 'icon_save.png';\n    } else {\n      if (this._authData != null) {\n        let content = this.getContent();\n        // changes notes in the group to the new group\n        for (let key of content) {\n          this._ds.changeNoteGroup(key, this.groupName);\n        }\n      } else {\n        for (let note of this.notes) {\n          this._ls.changeNoteGroup(note.$key, this.groupName);\n        }\n      }\n      this.enableEditIfNull = '';\n      this.editGroupName();\n      this.getNotes();\n      this.editSrc = 'icon_edit.png';\n      this._tx._toggleExpand = false;\n    }\n  }\n\n  // Expand category on click arrowBtn\n  groupExpand() {\n    // Uffes idea:\n    if (!this.editingName) {\n      if (this.arrowSrc == 'icon_hide.png') {\n        this._tx._toggleExpand = false;\n      } else {\n        this._tx._toggleExpand = true;\n      }\n      this.expanded = this._tx._toggleExpand;\n      if (this.expanded) {\n        this.arrowSrc = 'icon_hide.png';\n      }\n      else {\n        this.arrowSrc = 'icon_expand.png';\n      }\n    }\n  }\n  emitNotes(groups : any){\n    this.notesChanged.emit('');\n  }\n\n  \n}"]}