{"version":3,"file":"dropdown.component.js","sourceRoot":"","sources":["dropdown.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\nimport {RouteConfig, ROUTER_DIRECTIVES, ROUTER_PROVIDERS} from '@angular/router-deprecated';\nimport { AngularFire, defaultFirebase, FirebaseRef, FirebaseListObservable } from 'angularfire2';\nimport {DataService} from './data.service';\nimport {CORE_DIRECTIVES} from '@angular/common';\nimport {DROPDOWN_DIRECTIVES} from 'ng2-bootstrap/ng2-bootstrap';\nimport {Note}from './note';\nimport { Injectable, Inject } from '@angular/core';\n\n@Component({\n  moduleId: module.id,\n  selector: 'dropdown',\n  providers: [ROUTER_PROVIDERS],\n  templateUrl: 'dropdown.component.html',\n  styleUrls: ['dropdown.component.css'],\n  directives: [ROUTER_DIRECTIVES, DROPDOWN_DIRECTIVES, CORE_DIRECTIVES],\n  pipes: []\n})\n\n@RouteConfig([\n])\n\nexport class DropdownComponent implements OnInit {\n    @Input() group: string;\n    @Output() changeGroup = new EventEmitter();\n    @Input() noteGroup: string;\n    @Output() changeNoteGroup = new EventEmitter();    \n    public disabled:boolean = false;\n    public status:{isopen:boolean} = {isopen: false};\n    public items:Array<string> = ['The first choice!',\n    'And another choice for you.', 'but wait! A third!'];\n    _authData;\n\n    public toggled(open:boolean):void {\n    console.log('Dropdown is now: ', open);\n    }\n\n    public toggleDropdown($event:MouseEvent):void {\n    $event.preventDefault();\n    $event.stopPropagation();\n    this.status.isopen = !this.status.isopen;\n    }\n    \n    groups :FirebaseListObservable<any[]>;  \n  \n    constructor(@Inject(FirebaseRef) private _ref: Firebase, private _ds: DataService) {\n        this._authData = this._ref.getAuth();\n    }\n    \n    ngOnInit() {\n        if(this._authData != null) {\n        this.getTitles();\n        }\n    }\n    \n    getTitles() {\n        if(this._authData != null) {\n        this._ds.getAllGroups().then(titles => this.groups = titles);\n        }\n    }\n    \n    selectGroup(group: string){\n        if(this._authData != null) {\n      this.changeGroup.emit(group);\n      this.changeNoteGroup.emit(group);\n        \n      var buttonText: HTMLElement = document.getElementById('group_name');\n      buttonText.innerHTML = group;\n      \n      console.log(\"Group selected \" + group);\n    }\n    }\n}"]}