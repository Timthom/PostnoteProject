{"version":3,"file":"data.service.js","sourceRoot":"","sources":["data.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Inject } from '@angular/core';\nimport { Note } from './note';\nimport { AngularFire, defaultFirebase, FirebaseRef, FirebaseListObservable } from 'angularfire2';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class DataService {\n    _notes: Firebase;\n    _groups: Firebase;\n    _afNotes: FirebaseListObservable<any[]>;\n    _afGroups: FirebaseListObservable<any[]>;\n    \n    constructor (@Inject(FirebaseRef) private _ref: Firebase, private _af: AngularFire) {\n        console.log(\"NU KÖR CONSTRUCTORN!!!\");\n        console.log(\"Här är auth data: \" + this._ref.getAuth()); \n        \n        if(this._ref.getAuth() == null) return;\n        if(localStorage.getItem('token') == null) return;\n        \n        console.log(\"Skrivs ej ut???\");\n        const token = localStorage.getItem('token');\n        this._ref.authWithCustomToken(token, function(error, authData) {\n            \n        \n        if (error) {\n            console.log(\"Authentication Failed!\", error);\n        } else {\n            console.log(\"Authenticated successfully with payload:\", authData);\n        }    \n    }, { remember: \"sessionOnly\"\n});\n        \n        var authData = _ref.getAuth();\n        console.log(authData);\n        this._afNotes = _af.database.list('/users/' + authData.uid + '/notes');\n        this._afGroups = _af.database.list('/users/' + authData.uid + '/groups', {\n            query: {\n                orderByChild: 'timeStamp'\n            }\n        });\n        this._notes = _ref.child('/users/' + authData.uid + '/notes');\n        this._groups = _ref.child('/users/' + authData.uid + '/groups');\n        console.log(\"inne i dataservice konstruktor\");\n    }\n    \n    //returns all notes in the DB...\n    getAllNotes() {\n        \n        console.log(\"Körs typ detta eller vad händer!??!?!?!\");\n        \n        if(this._ref.getAuth() == null) return;\n  \n        const token = localStorage.getItem('token');\n        this._ref.authWithCustomToken(token, function(error, authData) {\n        \n        if (error) {\n            console.log(\"Authentication Failed!\", error);\n        } else {\n            console.log(\"Authenticated successfully with payload:\", authData);\n        }    \n    }, { remember: \"sessionOnly\"\n});\n        console.log(token);\n      return Promise.resolve(this._afNotes);\n    }\n    \n     //adds a new note(FirebaseListObservable with random id) to the database...\n    addNoteToNotes(title: string, text: string, group: string, time: number, color: string) {\n        \n        if(this._ref.getAuth() == null) return;\n        \n        const token = localStorage.getItem('token');\n        this._ref.authWithCustomToken(token, function(error, authData) {\n        \n        if (error) {\n            console.log(\"Authentication Failed!\", error);\n        } else {\n            console.log(\"Authenticated successfully with payload:\", authData);\n        }    \n    }, { remember: \"sessionOnly\"\n});     console.log(token);\n        \n        console.log(this._notes.ref);\n        \n        this._notes.push({'title': title, 'text': text, 'group': group, 'timeStamp': (time * -1), 'color': color});\n        console.log(Firebase);\n    }\n    \n    //updates the notes title with the chosen id...\n    updateNoteTitle(id: string, newTitle: string) {\n        \n        if(this._ref.getAuth() == null) return;\n        \n        const token = localStorage.getItem('token');\n        this._ref.authWithCustomToken(token, function(error, authData) {\n        \n        if (error) {\n            console.log(\"Authentication Failed!\", error);\n        } else {\n            console.log(\"Authenticated successfully with payload:\", authData);\n        }    \n    }, { remember: \"sessionOnly\"\n});\n        this._notes.child(id).update({'title': newTitle});\n    }\n    \n    //updates the notes text with the chosen id...\n    updateNoteText(id: string, newText: string) {\n        \n        if(this._ref.getAuth() == null) return;\n        \n        const token = localStorage.getItem('token');\n        this._ref.authWithCustomToken(token, function(error, authData) {\n        \n        if (error) {\n            console.log(\"Authentication Failed!\", error);\n        } else {\n            console.log(\"Authenticated successfully with payload:\", authData);\n        }    \n    }, { remember: \"sessionOnly\"\n});\n        this._notes.child(id).update({'text': newText});\n    }\n    \n    //updates notes backgroundcolor...\n    updateNoteColor(id: string, color: string){\n        this._notes.child(id).update({'color': color});\n    }\n    \n    //deletes the note with the chosen id...\n    deleteNote(id: string) {\n        \n        if(this._ref.getAuth() == null) return;\n        \n        const token = localStorage.getItem('token');\n        this._notes.authWithCustomToken(token, function(error, authData) {\n        \n        if (error) {\n            console.log(\"Authentication Failed!\", error);\n        } else {\n            console.log(\"Authenticated successfully with payload:\", authData);\n        }    \n    }, { remember: \"sessionOnly\"\n});\n        this._notes.child(id).remove();\n    }\n    \n    //returns every Note based on category\n    getAllNotesInGroup(groupName: string) {\n        \n        if(this._ref.getAuth() == null) return;\n        \n        const token = localStorage.getItem('token');\n        this._ref.authWithCustomToken(token, function(error, authData) {\n        \n        if (error) {\n            console.log(\"Authentication Failed!\", error);\n        } else {\n            console.log(\"Authenticated successfully with payload:\", authData);\n        }    \n    }, { remember: \"sessionOnly\"\n});\n        var authData = this._ref.getAuth();\n        console.log(authData);\n        let tempObservable: FirebaseListObservable<any[]> = this._af.database.list('/users/' + authData.uid + '/notes', {\n           query: {\n              orderByChild: 'group',\n              equalTo: groupName\n           }\n        });\n       \n        return Promise.resolve(tempObservable);        \n    }\n    \n    //returns all groups in the DB...\n    getAllGroups() {\n        \n        if(this._ref.getAuth() == null) return;\n        \n        const token = localStorage.getItem('token');\n        this._ref.authWithCustomToken(token, function(error, authData) {\n        \n        if (error) {\n            console.log(\"Authentication Failed!\", error);\n        } else {\n            console.log(\"Authenticated successfully with payload:\", authData);\n        }    \n    }, { remember: \"sessionOnly\"\n});\n        return Promise.resolve(this._afGroups);\n    }\n    \n    \n     //adds a new group(FirebaseListObservable with random id) to the database. \n\n    addGroupToGroups(name: string, time: number) {\n        \n        if(this._ref.getAuth() == null) return;\n        \n        const token = localStorage.getItem('token');\n        this._ref.authWithCustomToken(token, function(error, authData) {\n        \n        if (error) {\n            console.log(\"Authentication Failed!\", error);\n        } else {\n            console.log(\"Authenticated successfully with payload:\", authData);\n        }    \n    }, { remember: \"sessionOnly\"\n});\n        this._groups.push({'name': name, 'timeStamp': (time * -1)});\n    }\n    \n    //updates the group name with the chosen id...\n    updateGroupName(id: string, name: string) {\n        const token = localStorage.getItem('token');\n        this._ref.authWithCustomToken(token, function(error, authData) {\n        \n        if (error) {\n            console.log(\"Authentication Failed!\", error);\n        } else {\n            console.log(\"Authenticated successfully with payload:\", authData);\n        }    \n    }, { remember: \"sessionOnly\"\n});\n        this._groups.child(id).update({'name': name});\n    }\n    \n    //deletes the group with the chosen id...\n    deleteGroup(id: string) {\n        const token = localStorage.getItem('token');\n        this._ref.authWithCustomToken(token, function(error, authData) {\n        \n        if (error) {\n            console.log(\"Authentication Failed!\", error);\n        } else {\n            console.log(\"Authenticated successfully with payload:\", authData);\n        }    \n    }, { remember: \"sessionOnly\"\n});\n        this._groups.child(id).remove();\n    }\n    \n    //changes the notes group resident...\n    changeNoteGroup(id: string, group: string) {\n        const token = localStorage.getItem('token');\n        this._notes.authWithCustomToken(token, function(error, authData) {\n        \n        if (error) {\n            console.log(\"Authentication Failed!\", error);\n        } else {\n            console.log(\"Authenticated successfully with payload:\", authData);\n        }    \n    }, { remember: \"sessionOnly\"\n});\n        this._notes.child(id).update({'group': group});\n    }\n}"]}