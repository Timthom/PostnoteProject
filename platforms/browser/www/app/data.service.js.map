{"version":3,"file":"data.service.js","sourceRoot":"","sources":["data.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Inject } from '@angular/core';\nimport { Note } from './note';\nimport { AngularFire, defaultFirebase, FirebaseRef, FirebaseListObservable } from 'angularfire2';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class DataService {\n    _notes: Firebase;\n    _groups: Firebase;\n    _afNotes: FirebaseListObservable<any[]>;\n    _afGroups: FirebaseListObservable<any[]>;\n    _afUserInfo: FirebaseListObservable<any[]>;\n\n    constructor( @Inject(FirebaseRef) private _ref: Firebase, private _af: AngularFire) {\n\n        if (this._ref.getAuth() == null) {\n            // console.log('return#1');\n            return;\n        }\n        \n        //Varför sker det här?\n        if (localStorage.getItem('token') == null) {\n            console.log('return#2');\n            return;\n        }\n        \n        const token = localStorage.getItem('token');\n        this._ref.authWithCustomToken(token, function (error, authData) {\n\n\n            if (error) {\n                //console.log(\"Authentication Failed!\", error);\n            } else {\n                //console.log(\"Authenticated successfully with payload:\", authData);\n            }\n        }, {\n            remember: \"default\"\n            });\n\n        var authData = _ref.getAuth();\n        \n        this._afUserInfo = _af.database.list('/users/' + authData.uid);\n        this._afNotes = _af.database.list('/users/' + authData.uid + '/notes');\n        this._afGroups = _af.database.list('/users/' + authData.uid + '/groups', {\n            query: {\n                orderByChild: 'timeStamp'\n            }\n        });\n        // console.log('nu kommer notesen!');\n        // console.log(this._notes);\n        this._notes = _ref.child('/users/' + authData.uid + '/notes');\n        // console.log(this._notes);\n        this._groups = _ref.child('/users/' + authData.uid + '/groups');\n    }\n\n    //returns all notes in the DB...\n    getAllNotes() {\n\n        if (this._ref.getAuth() == null) return;\n\n        const token = localStorage.getItem('token');\n        this._ref.authWithCustomToken(token, function (error, authData) {\n\n            if (error) {\n                //console.log(\"Authentication Failed!\", error);\n            } else {\n                //console.log(\"Authenticated successfully with payload:\", authData);\n            }\n        }, {\n            remember: \"default\"\n            });\n        // console.log(token);\n        return Promise.resolve(this._afNotes);\n    }\n\n    //adds a new note(FirebaseListObservable with random id) to the database...\n    addNoteToNotes(title: string, text: string, group: string, time: number, color: string) {\n\n        if (this._ref.getAuth() == null) return;\n\n        const token = localStorage.getItem('token');\n        this._ref.authWithCustomToken(token, function (error, authData) {\n\n            if (error) {\n                //console.log(\"Authentication Failed!\", error);\n            } else {\n                //console.log(\"Authenticated successfully with payload:\", authData);\n            }\n        }, {\n            remember: \"default\"\n            }); console.log(token);\n\n        // console.log(this._notes.ref);\n\n        this._notes.push({ 'title': title, 'text': text, 'group': group, 'timeStamp': (time * -1), 'color': color });\n        // console.log(Firebase);\n    }\n\n    //updates the notes title with the chosen id...\n    updateNoteTitle(id: string, newTitle: string) {\n\n        if (this._ref.getAuth() == null) return;\n\n        const token = localStorage.getItem('token');\n        this._ref.authWithCustomToken(token, function (error, authData) {\n\n            if (error) {\n                //console.log(\"Authentication Failed!\", error);\n            } else {\n                //console.log(\"Authenticated successfully with payload:\", authData);\n            }\n        }, {\n            remember: \"default\"\n            });\n        this._notes.child(id).update({ 'title': newTitle });\n    }\n\n    //updates the notes text with the chosen id...\n    updateNoteText(id: string, newText: string) {\n\n        if (this._ref.getAuth() == null) return;\n\n        const token = localStorage.getItem('token');\n        this._ref.authWithCustomToken(token, function (error, authData) {\n\n            if (error) {\n                //console.log(\"Authentication Failed!\", error);\n            } else {\n                //console.log(\"Authenticated successfully with payload:\", authData);\n            }\n        }, {\n            remember: \"default\"\n            });\n        this._notes.child(id).update({ 'text': newText });\n    }\n\n    //updates notes backgroundcolor...\n    updateNoteColor(id: string, color: string) {\n        this._notes.child(id).update({ 'color': color });\n    }\n\n    //deletes the note with the chosen id...\n    deleteNote(id: string) {\n\n        if (this._ref.getAuth() == null) return;\n\n        const token = localStorage.getItem('token');\n        this._notes.authWithCustomToken(token, function (error, authData) {\n\n            if (error) {\n                //console.log(\"Authentication Failed!\", error);\n            } else {\n                //console.log(\"Authenticated successfully with payload:\", authData);\n            }\n        }, {\n            remember: \"default\"\n            });\n        this._notes.child(id).remove();\n    }\n\n    //returns every Note based on category\n    getAllNotesInGroup(groupName: string) {\n\n        if (this._ref.getAuth() == null) return;\n\n        const token = localStorage.getItem('token');\n        this._ref.authWithCustomToken(token, function (error, authData) {\n\n            if (error) {\n                //console.log(\"Authentication Failed!\", error);\n            } else {\n                //console.log(\"Authenticated successfully with payload:\", authData);\n            }\n        }, {\n            remember: \"default\"\n            });\n        var authData = this._ref.getAuth();\n        //console.log(authData);\n        let tempObservable: FirebaseListObservable<any[]> = this._af.database.list('/users/' + authData.uid + '/notes', {\n            query: {\n                orderByChild: 'group',\n                equalTo: groupName\n            }\n        });\n\n        return Promise.resolve(tempObservable);\n    }\n\n    //returns all groups in the DB...\n    getAllGroups() {\n\n        if (this._ref.getAuth() == null) return;\n\n        const token = localStorage.getItem('token');\n        this._ref.authWithCustomToken(token, function (error, authData) {\n\n            if (error) {\n                //console.log(\"Authentication Failed!\", error);\n            } else {\n                //console.log(\"Authenticated successfully with payload:\", authData);\n            }\n        }, {\n            remember: \"default\"\n            });\n        return Promise.resolve(this._afGroups);\n    }\n\n    //adds a new group(FirebaseListObservable with random id) to the database. \n\n    addGroupToGroups(name: string, time: number) {\n\n        if (this._ref.getAuth() == null) return;\n\n        const token = localStorage.getItem('token');\n        this._ref.authWithCustomToken(token, function (error, authData) {\n\n            if (error) {\n                //console.log(\"Authentication Failed!\", error);\n            } else {\n                //console.log(\"Authenticated successfully with payload:\", authData);\n            }\n        }, {\n            remember: \"default\"\n            });\n        this._groups.push({ 'name': name, 'timeStamp': (time * -1) });\n    }\n\n    //updates the group name with the chosen id...\n    updateGroupName(id: string, name: string) {\n        const token = localStorage.getItem('token');\n        this._ref.authWithCustomToken(token, function (error, authData) {\n\n            if (error) {\n                //console.log(\"Authentication Failed!\", error);\n            } else {\n                //console.log(\"Authenticated successfully with payload:\", authData);\n            }\n        }, {\n            remember: \"default\"\n            });\n        this._groups.child(id).update({ 'name': name });\n    }\n\n    //deletes the group with the chosen id...\n    deleteGroup(id: string) {\n        const token = localStorage.getItem('token');\n        this._ref.authWithCustomToken(token, function (error, authData) {\n\n            if (error) {\n                //console.log(\"Authentication Failed!\", error);\n            } else {\n                //console.log(\"Authenticated successfully with payload:\", authData);\n            }\n        }, {\n            remember: \"default\"\n            });\n        this._groups.child(id).remove();\n    }\n\n    //changes the notes group resident...\n    changeNoteGroup(id: string, group: string) {\n        const token = localStorage.getItem('token');\n        this._notes.authWithCustomToken(token, function (error, authData) {\n            if (error) {\n                //console.log(\"Authentication Failed!\", error);\n            } else {\n                //console.log(\"Authenticated successfully with payload:\", authData);\n            }\n        }, {\n            remember: \"default\"\n            });\n        this._notes.child(id).update({ 'group': group });\n    }\n\n    /* Vill göra denna med promises om jag hinner //Marcus... */    \n    getGroupNameFromId(id: string) {\n        let notes = this._notes;\n        // console.log(notes);\n    //this._notes.child(id).child('group').once('value').then((s) => (console.log(s.val())));\n        return new Promise(function(resolve){\n        \n        //this._notes.child(id).child('group').once('value').then((s) => resolve(s.val()));\n        //resolve(this._notes.child(id).child('group').once('value').then((s) => (s.val())));\n        notes.child(id).child('group').on('value', (s) => resolve(s.val()))\n        \n        // console.log(notes, abc);\n        // resolve(abc);\n        //resolve('hej');\n        });      \n    }\n}"]}