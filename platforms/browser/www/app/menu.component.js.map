{"version":3,"file":"menu.component.js","sourceRoot":"","sources":["menu.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\nimport {RouteConfig, ROUTER_DIRECTIVES, ROUTER_PROVIDERS} from '@angular/router-deprecated';\nimport {Note}from './note';\nimport {DataService} from './data.service';\nimport {MenuGroupComponent} from './menugroup.component';\nimport {ValueService} from './value.service';\nimport {AngularFire, defaultFirebase, FirebaseRef, FirebaseListObservable} from 'angularfire2';\nimport {Injectable, Inject} from '@angular/core';\nimport {CanReuse} from \"@angular/router-deprecated\";\nimport {Group} from './group';\n\nimport {LocalStorageService} from './localstorage.service';\n//import {Postnote2App} from './postnote2.component';\n\n@Component({\n  moduleId: module.id,\n  selector: 'menu',\n  providers: [ROUTER_PROVIDERS, LocalStorageService],\n  templateUrl: 'menu.component.html',\n  styleUrls: ['menu.component.css'],\n  directives: [ROUTER_DIRECTIVES, MenuGroupComponent],\n  pipes: []\n})\n\nexport class MenuComponent implements OnInit, CanReuse {\n\n  routerCanReuse() {\n    return false;\n  }\n  \n  @Input() myGroups: any;\n  @Input() notes: any;\n\n  showingCancel: boolean = false;\n  adding: boolean = false;\n  groupName: string = \"\";\n  titles: any;\n  buttonText: string = \"Add category\";\n  \n  checkSideBar: boolean = this._vs._showSideBar;\n  _authData;\n\n  @Output() clicked = new EventEmitter();\n\n\n  constructor( @Inject(FirebaseRef) private _ref: Firebase, private _ds: DataService, private _vs: ValueService, private _ls: LocalStorageService) {\n\n    this._authData = this._ref.getAuth();\n    //_postNote2.groupChanged.subscribe(this.getGroups);\n\n  }\n\n  ngOnInit() {\n    this.getTitles();\n    //this.getGroups();\n  }\n\n  getTitles() {\n    if (this._authData != null) {\n      this._ds.getAllNotes().then(titles => this.titles = titles);\n      this._ds.getAllNotesInGroup('noGroup').then(notes => this.titles = notes);\n    } else {\n      this.titles = this._ls.getNotesInGroup('noGroup');\n    }\n  }\n\n  getGroups() {\n    if (this._authData != null) {\n      this._ds.getAllGroups().then(groups => this.myGroups = groups);\n    } else {\n      this.myGroups = this._ls.getAllGroups();\n    }\n  }\n\n\n  jumpToNote(note: string) {\n    var element = document.getElementById(note);\n    element.scrollIntoView(true);\n  }\n\n  toggleInput() {\n    this.adding = !this.adding;\n    this.showingCancel = !this.showingCancel;\n    if (this.adding) {\n      this.buttonText = \"Cancel\";\n    } else {\n      this.buttonText = \"Add category\";\n    }\n  }\n\n  addGroup() {\n    if (this.groupName.trim().length > 0) {\n      let time = new Date().getTime();\n\n      if (this._authData != null) {\n        this._ds.addGroupToGroups(this.groupName, time);\n        this.getGroups();\n        this.getTitles();\n\n      } else {\n        let newGroup = new Group(this.groupName, time.toString());\n        this._ls.saveGroup(newGroup);\n        this.getGroups();\n        //TEMPORARY\n        //location.reload();\n      }\n\n      this.clicked.emit('');\n\n      //Reset input after adding\n      this.groupName = \"\";\n      this.adding = false;\n      this.showingCancel = !this.showingCancel;\n      this.buttonText = \"Add category\";\n    }\n  }\n  \n  groupsChanged(groups : any){\n    //this.myGroups = groups;\n    //console.log(\"GROUPS CHANGED MENU \" + this.myGroups);\n  }\n}\n\n\n"]}