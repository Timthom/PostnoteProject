{"version":3,"file":"localstorage.service.js","sourceRoot":"","sources":["localstorage.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Note } from './note';\nimport { Group } from './group';\n\n\n@Injectable()\nexport class LocalStorageService {\n\n    notes: any;\n    groups: any;\n\n\n    constructor() {\n        console.log(\"inne i LocalStorageService constructor\");\n        if (!localStorage.getItem(\"savedNotes\")) {\n            this.notes = [];\n        } else {\n            this.notes = this.getAllNotes();\n        }\n        this.groups = this.getAllGroups();\n    }\n\n    getAllNotes() {\n        this.notes = JSON.parse(localStorage.getItem(\"savedNotes\"));\n        return this.notes;\n    }\n\n    getAllGroups() {\n        this.groups = JSON.parse(localStorage.getItem(\"savedGroups\"));\n        return this.groups;\n    }\n\n    saveGroup(group: Group) {\n        this.groups.push(group);\n        localStorage.setItem(\"savedGroups\", JSON.stringify(this.groups));\n    }\n\n    getNotesInGroup() {\n        //GET all notes in each group!?\n    }\n\n    deleteGroup(groupkey: string) {\n        console.log(groupkey);\n        for (var item in this.groups) {\n            console.log(item);\n            if (groupkey == this.groups[item].$key) {\n                this.groups.splice(item, 1);\n                console.log(this.groups);\n                localStorage.setItem(\"savedGroups\", JSON.stringify(this.groups));\n                //TO DO : Refresha menyn!\n                return;\n            }\n        }\n    }\n\n    updateGroupName(groupkey: string, newName: string) {\n        for (var item in this.groups) {\n            if (groupkey == this.groups[item].$key) {\n                this.groups[item].name = newName;\n                localStorage.setItem(\"savedGroups\", JSON.stringify(this.groups));\n                return;\n            }\n        }\n    }\n\n    addNoteToNotes(note: Note) {\n        this.notes.push(note);\n        localStorage.setItem(\"savedNotes\", JSON.stringify(this.notes));\n        console.log(this.notes);\n    }\n\n\n    //For testing.... \n    clearing() {\n        this.groups = [];\n        localStorage.setItem(\"savedGroups\", JSON.stringify(this.groups));\n        this.notes = [];\n        localStorage.setItem(\"savedNotes\", JSON.stringify(this.notes));\n    }\n\n}"]}