{"version":3,"file":"localstorage.service.js","sourceRoot":"","sources":["localstorage.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Note } from './note';\nimport { Group } from './group';\n\n\n@Injectable()\nexport class LocalStorageService {\n\n    notes: any;\n    groups: any;\n    constructor() {\n        this.notes = new Array;\n        this.groups = new Array;\n\n        if (!localStorage.getItem(\"savedNotes\")) {\n            this.notes = [];\n        } else {\n            this.notes = this.getAllNotes();\n        }\n\n        if (!localStorage.getItem(\"savedGroups\")) {\n            this.groups = [];\n        } else {\n            this.groups = this.getAllGroups();\n        }\n    }\n\n\n\n    getAllGroups() {\n        if (JSON.parse(localStorage.getItem(\"savedGroups\"))) {\n                    this.groups = JSON.parse(localStorage.getItem(\"savedGroups\"));\n        return this.groups;\n        } else {\n            return [];\n        }\n    }\n\n    saveGroup(group: Group) {\n        this.groups.push(group);\n        localStorage.setItem(\"savedGroups\", JSON.stringify(this.groups));\n        //this.printAll();\n    }\n\n\n\n    deleteGroup(groupkey: string) {\n        //The notes in group are removed in the components before this method is called\n        for (var item in this.groups) {\n            if (groupkey == this.groups[item].$key) {\n                this.groups.splice(item, 1);\n                localStorage.setItem(\"savedGroups\", JSON.stringify(this.groups));\n                //this.printAll();\n                return;\n            }\n        }\n\n    }\n\n    updateGroupName(groupkey: string, newName: string) {\n        var oldGroupName;\n        for (var item in this.groups) {\n            if (groupkey == this.groups[item].$key) { //Find group with key\n                oldGroupName = this.groups[item].name;\n                this.groups[item].name = newName;\n                localStorage.setItem(\"savedGroups\", JSON.stringify(this.groups));\n\n            }\n        }\n        for (var item in this.notes) {\n            if (oldGroupName == this.notes[item].group) { //If it has the old groupname\n                this.changeNoteGroup(this.notes[item].$key, newName);//change to new\n            }\n        }\n        localStorage.setItem(\"savedNotes\", JSON.stringify(this.notes));\n        //this.printAll();\n\n    }\n\n    getAllNotes() {\n        this.notes = JSON.parse(localStorage.getItem(\"savedNotes\"));\n        return this.notes;\n    }\n\n    getNotesInGroup(groupName: string) {\n        if (localStorage.getItem(\"savedNotes\")){\n            this.notes = JSON.parse(localStorage.getItem(\"savedNotes\"));\n            let groupNotes = new Array;\n            for (var item of this.notes) {\n                if (item.group === groupName) {\n                    groupNotes.push(item);\n                }\n            }\n            return groupNotes;\n        } else {\n            return [];\n        }\n\n    }\n\n    changeNoteGroup(key: string, newGroup: string) {\n        for (var item in this.notes) {\n            if (key == this.notes[item].$key) {\n                this.notes[item].group = newGroup;\n                localStorage.setItem(\"savedNotes\", JSON.stringify(this.notes));\n                //this.printAll();\n                return;\n            }\n        }\n        \n    }\n\n    addNoteToNotes(note: Note) {\n        this.notes.push(note);\n        localStorage.setItem(\"savedNotes\", JSON.stringify(this.notes));\n        //this.printAll();\n    }\n\n    deleteNote(key: string) {\n        for (var item in this.notes) {\n            if (key == this.notes[item].$key) {\n                this.notes.splice(item, 1);\n                localStorage.setItem(\"savedNotes\", JSON.stringify(this.notes));\n                //this.printAll();\n                return;\n            }\n        }\n        \n    }\n    \n    updateNoteTitle(noteKey : string, newTitle: string){\n        for (var item in this.notes) {\n            if (noteKey == this.notes[item].$key) {\n                this.notes[item].title = newTitle;\n                localStorage.setItem(\"savedNotes\", JSON.stringify(this.notes));\n                //this.printAll();\n                return;\n            }\n        }\n    }\n    \n    updateNoteText(noteKey : string, newText: string){\n        for (var item in this.notes) {\n            if (noteKey == this.notes[item].$key) {\n                this.notes[item].text = newText;\n                localStorage.setItem(\"savedNotes\", JSON.stringify(this.notes));\n                //this.printAll();\n                return;\n            }\n        }\n    }\n    \n    updateNoteColor(noteKey: string, color: string) {\n        for (var item in this.notes) {\n            if (noteKey == this.notes[item].$key) {\n                this.notes[item].color = color;\n                localStorage.setItem(\"savedNotes\", JSON.stringify(this.notes));\n                //this.printAll();\n                return;\n            }\n        }\n    }\n\n\n    //For testing.... \n    clearing() {\n        this.groups = [];\n        localStorage.setItem(\"savedGroups\", JSON.stringify(this.groups));\n        this.notes = [];\n        localStorage.setItem(\"savedNotes\", JSON.stringify(this.notes));\n    }\n\n    printAll() {\n        console.log(\"Notes in local: \");\n        console.log(this.notes);\n        console.log(\"Groups in local: \");\n        console.log(this.groups);\n    }\n\n}"]}