{"version":3,"file":"note.component.js","sourceRoot":"","sources":["note.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit, Output, EventEmitter, ViewChild, ViewChildren, QueryList} from '@angular/core';\nimport {RouteConfig, ROUTER_DIRECTIVES, ROUTER_PROVIDERS} from '@angular/router-deprecated';\nimport {AngularFire} from 'angularfire2';\nimport {FirebaseListObservable} from 'angularfire2';\nimport {DataService} from './data.service';\n//added\nimport {Input, Inject, Injectable} from '@angular/core';\nimport {Note} from './note';\nimport {DropdownComponent} from './dropdown.component';\nimport {ColorpickerComponent} from './colorpicker.component';\nimport { defaultFirebase, FirebaseRef } from 'angularfire2';\nimport {LocalStorageService} from './localstorage.service';\nimport { DragulaHelperService } from './dragula-helper.service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'note',\n  providers: [ROUTER_PROVIDERS],\n  templateUrl: 'note.component.html',\n  styleUrls: ['note.component.css'],\n  directives: [ROUTER_DIRECTIVES, DropdownComponent, ColorpickerComponent],\n  pipes: []\n})\n@RouteConfig([\n])\n\nexport class NoteComponent implements OnInit {\n\n  @ViewChildren(DropdownComponent)\n  private dropdownComponents: QueryList<DropdownComponent>;\n\n  @Input()\n  noteInNote;\n\n  @Input()\n  title;\n\n  @Input()\n  text;\n\n  @Input()\n  group;\n\n  @Input()\n  color;\n\n  @Input()\n  groups: any;\n\n  @Output()\n  noteChanged = new EventEmitter();\n\n  _authData;\n  test: any;\n\n  ngOnInit() {\n    this.colorInit(this.color);\n  }\n\n  constructor(@Inject(FirebaseRef) private _ref: Firebase, private _ds: DataService, private _ls: LocalStorageService, private _dragulaHelper: DragulaHelperService) {\n    this._authData = this._ref.getAuth();\n  }\n\n  isEditable: boolean = false;\n  delete_button: boolean = true;\n  enabledIfNull: string = \"\";\n  noteSelectedGroup: string = this.group;\n  isPink: boolean = false;\n  isMagenta: boolean = false;\n  isOrange: boolean = false;\n  isBlue: boolean = false;\n  isYellow: boolean = true;\n  isGreen: boolean = false;\n  colorString: string; //for saving event from colorPicker\n\n  editClick() {\n    this.isEditable = true;\n    this.enabledIfNull = null;\n  }\n\n  save() {\n    if (this.noteSelectedGroup == undefined) { //If no group selected\n      this.noteSelectedGroup = this.group; //use the same one\n    }\n    if (this._authData != null) {\n      this._ds.updateNoteTitle(this.noteInNote.$key, this.title);\n      this._ds.updateNoteText(this.noteInNote.$key, this.text);\n      this._ds.changeNoteGroup(this.noteInNote.$key, this.noteSelectedGroup);//moved\n      if (this.colorString != undefined) { //If new color has been chosen\n        this._ds.updateNoteColor(this.noteInNote.$key, this.colorString);//moved\n      }\n\n\n    } else {\n      this._ls.updateNoteTitle(this.noteInNote.$key, this.title);\n      this._ls.updateNoteText(this.noteInNote.$key, this.text);\n      this._ls.changeNoteGroup(this.noteInNote.$key, this.noteSelectedGroup);//moved\n      if (this.colorString != undefined) { //If new color has been chosen\n        this._ls.updateNoteColor(this.noteInNote.$key, this.colorString);//moved\n      }\n\n    }\n\n    this.noteChanged.emit('');\n    this.isEditable = false;\n    this.enabledIfNull = \"\";\n\n  }\n\n  //Emitted from dropdown\n  noteGroupChanged(event) {\n    console.log(`hÃ¤r kommer event ${event}`);\n\n    this.noteSelectedGroup = event;\n\n    if (this._authData != null) {\n      let getPosInfo: any = this._ds.getPositionFromId(this.noteInNote.$key);\n      let getOldGroupInfo: any = this._ds.getGroupNameFromId(this.noteInNote.$key);\n      Promise.all([getPosInfo, getOldGroupInfo]).then((result) => {\n        let prevPos = result[0];\n        let oldGroup = result[1];\n        console.log(`prevPos = ${prevPos}, oldGroup = ${oldGroup}, newGroup = ${this.noteSelectedGroup}`);\n        this._dragulaHelper.groupChangedByDropDown(oldGroup, this.noteSelectedGroup, prevPos, this.noteInNote.$key);\n        // this._ds.changeNoteGroup(this.noteInNote.$key, this.noteSelectedGroup);\n      });\n    } else {\n      this._ls.changeNoteGroup(this.noteInNote.$key, this.noteSelectedGroup);\n      //TEMPORARY\n      //location.reload();\n    }\n    //this.noteChanged.emit(''); uppdateras m.h.a. editclick??\n  }\n\n  colorChanged(event) {\n    this.colorSwitch(event);\n    this.isEditable = true;\n    this.colorString = event;\n    if (this._authData != null) {\n    } else {\n    }\n  }\n\n  resetColors() {\n    this.isPink = false;\n    this.isMagenta = false;\n    this.isOrange = false;\n    this.isBlue = false;\n    this.isYellow = false;\n    this.isGreen = false;\n  }\n\n  colorInit(event) {\n    this.colorSwitch(event);\n  }\n\n  colorSwitch(event) {\n    this.resetColors();\n    switch (event) {\n      case \"pink\":\n        this.isPink = true;\n        break;\n      case \"magenta\":\n        this.isMagenta = true;\n        break;\n      case \"orange\":\n        this.isOrange = true;\n        break;\n      case \"blue\":\n        this.isBlue = true;\n        break;\n      case \"yellow\":\n        this.isYellow = true;\n        break;\n      case \"green\":\n        this.isGreen = true;\n        break;\n      default:\n        this.isYellow = true;\n    }\n  }\n\n  deleteClick() {\n    var o = this;\n\n    if (o._authData != null) {\n     \n      let getIdInfo: any = o._ds.getPositionFromId(o.noteInNote.$key);\n      getIdInfo.then(prevPos => o._dragulaHelper.updatePositionsInGroupAndThenDeleteNoteWhenPressingDelete(o.group, prevPos, o.noteInNote));   \n    } else {\n      o._ls.deleteNote(o.noteInNote.$key);\n\n    };\n\n    o.noteChanged.emit('');\n    this.delete_button = !this.delete_button;\n  }\n\n  groupsChanged() {\n    this.dropdownComponents.toArray().forEach((child) => child.getTitles());\n  }\n}\n\n"]}